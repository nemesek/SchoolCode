							===============new_graph test:===============
							PASS
							===============is_empty tests:===============
							PASS
							PASS
							===============add_vertex tests:===============
							PASS
							PASS
							===============remove_vertex tests:===============
							PASS
							PASS
							===============update_vertex tests:===============
							PASS
							PASS
							===============get_vertex tests:===============
							PASS
							PASS
							===============has_vertex tests:===============
							PASS
							PASS
							===============add_edge tests:===============
							PASS
							PASS
							===============remove_edge tests:===============
							PASS
							PASS
							===============update_edge tests:===============
							PASS
							PASS
							===============get_edge tests:===============
							PASS
							PASS
							===============has_edge tests:===============
							PASS
							PASS
							===============all_vertices tests:===============
							PASS
							PASS
							===============from_edges tests:===============
							PASS
							PASS

							===============Tests Done:===============

							Demonstrating Graph.ToString() Output
							Graph G has 3 vertices in set V
							Graph G has 3 edges in set E
							Vertex with Id 1 is Direct Predecessor of:
							----Successor Vertex with Id 2
							----Successor Vertex with Id 3
							Vertex with Id 2 is Direct Predecessor of:
							----No other vertices
							Vertex with Id 3 is Direct Predecessor of:
							----Successor Vertex with Id 2

							Press any key to continue . . .